version: "3.8"

services:
  database:
    build: ./database
    container_name: db
    restart: always
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s

  memcache:
    build: ./memcache
    container_name: memcache
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 25s
      retries: 5

  utility:
    depends_on:
      database:
        condition: service_healthy
      memcache:
        condition: service_healthy
    build:
      context: ./services/utility
      dockerfile: Dockerfile
    container_name: utility
    restart: always
    develop:
      watch:
        - action: sync
          path: ./services/utility
          target: /services/utility
          ignore:
            - main
            - tmp
        - action: rebuild
          path: ./services/utility/go.mod

  user:
    depends_on:
      database:
        condition: service_healthy
      memcache:
        condition: service_healthy
      utility:
        condition: service_started
    build:
      context: ./services/user
      dockerfile: Dockerfile
    container_name: user
    restart: always
    ports:
      - 8080:8080
    develop:
      watch:
        - action: sync
          path: ./services/user
          target: /services/user
          ignore:
            - main
            - tmp
        - action: rebuild
          path: ./services/user/go.mod

  # hub:
  #   build: ./hub
  #   container_name: hub
  #   restart: always
  #   ports:
  #     - "15672:15672"
  #   healthcheck:
  #     test: ["CMD", "rabbitmqctl", "status"]
  #     interval: 10s
  #     retries: 5
  #     timeout: 5s

  # proxy:
  #   depends_on:
  #     - server
  #   build: ./proxy
  #   container_name: proxy
  #   ports:
  #     - 8000:8000

volumes:
  db:
