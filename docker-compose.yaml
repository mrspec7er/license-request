version: "3.8"

services:
  database:
    build: ./database
    container_name: db
    restart: always
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
      timeout: 5s

  memcache:
    build: ./memcache
    container_name: memcache
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 25s
      retries: 5

  hub:
    build: ./hub
    container_name: hub
    restart: always
    ports:
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 5
      timeout: 5s

  utility:
    depends_on:
      database:
        condition: service_healthy
    build:
      context: ./services/utility
      dockerfile: Dockerfile
    container_name: utility
    restart: always
    develop:
      watch:
        - action: sync
          path: ./services/utility
          target: /services/utility
          ignore:
            - main
            - tmp
        - action: rebuild
          path: ./services/utility/go.mod

  user:
    depends_on:
      database:
        condition: service_healthy
      memcache:
        condition: service_healthy
      hub:
        condition: service_healthy
      utility:
        condition: service_started
    build:
      context: ./services/user
      dockerfile: Dockerfile
    container_name: user
    restart: always
    ports:
      - 8080:8080
    develop:
      watch:
        - action: sync
          path: ./services/user
          target: /services/user
          ignore:
            - main
            - tmp
        - action: rebuild
          path: ./services/user/go.mod

  form:
    depends_on:
      database:
        condition: service_healthy
      memcache:
        condition: service_healthy
      hub:
        condition: service_healthy
      utility:
        condition: service_started
    build:
      context: ./services/form
      dockerfile: Dockerfile
    container_name: form
    restart: always
    ports:
      - 8081:8081
    develop:
      watch:
        - action: sync
          path: ./services/form
          target: /services/form
          ignore:
            - main
            - tmp
        - action: rebuild
          path: ./services/form/go.mod

  application:
    depends_on:
      database:
        condition: service_healthy
      memcache:
        condition: service_healthy
      hub:
        condition: service_healthy
      utility:
        condition: service_started
    build:
      context: ./services/application
      dockerfile: Dockerfile
    container_name: application
    restart: always
    ports:
      - 8082:8082
    develop:
      watch:
        - action: sync
          path: ./services/application
          target: /services/application
          ignore:
            - main
            - tmp
        - action: rebuild
          path: ./services/application/go.mod

  logger:
    depends_on:
      database:
        condition: service_healthy
      memcache:
        condition: service_healthy
      hub:
        condition: service_healthy
      utility:
        condition: service_started
    build:
      context: ./services/logger
      dockerfile: Dockerfile
    container_name: logger
    restart: always
    ports:
      - 8083:8083
    develop:
      watch:
        - action: sync
          path: ./services/logger
          target: /services/logger
          ignore:
            - main
            - tmp
        - action: rebuild
          path: ./services/logger/go.mod

  proxy:
    depends_on:
      - utility
      - user
      - form
      - application
      - logger
    build: ./proxy
    container_name: proxy
    ports:
      - 3000:3000

volumes:
  db:
